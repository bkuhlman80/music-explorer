
name: ci

on:
  push: { branches: [ main ] }
  pull_request: { branches: [ main ] }
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-report:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11", "3.12", "3.13" ]

    env:
      PYTHONUTF8: "1"
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
      STREAMLIT_BROWSER_GATHER_USAGE_STATS: "false"
      USER_AGENT: ${{ secrets.MB_USER_AGENT }}
      MB_BASE_URL: https://musicbrainz.org/ws/2
      MB_RATE_LIMIT_MS: "1500"
      ARTISTS_SEED: Radiohead,Daft Punk,Beyonce

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('env/requirements.txt', 'env/requirements-dev.txt') }}
          restore-keys: ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Create venv and install deps (locked)
        run: |
          python -m venv .venv
          .venv/bin/python -m pip install --upgrade pip pip-tools
          .venv/bin/pip-sync env/requirements.txt env/requirements-dev.txt

      - name: Write .env
        run: |
          mkdir -p env
          cat > env/.env <<ENV
          USER_AGENT=${USER_AGENT}
          MB_BASE_URL=${MB_BASE_URL}
          MB_RATE_LIMIT_MS=${MB_RATE_LIMIT_MS}
          MB_MAX_RETRIES=3
          MB_TIMEOUT_S=30
          ARTISTS_SEED=${ARTISTS_SEED}
          TZ=UTC
          STREAMLIT_PORT=8501
          STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
          ENV


      - name: Pull raw (skip if no UA)
        run: |
          source .venv/bin/activate
          if [ -n "$USER_AGENT" ]; then make pull; else echo "No MB_USER_AGENT secret; skipping pull"; fi

      - name: Clean
        run: source .venv/bin/activate && make clean

      - name: Build marts
        run: source .venv/bin/activate && make build

      - name: Lint
        run: source .venv/bin/activate && make lint

      - name: Tests
        run: source .venv/bin/activate && make test

      - name: Report
        run: source .venv/bin/activate && make report

      - name: Profile data dictionary
        run: source .venv/bin/activate && make profile-dict

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: music-explorer-${{ matrix.python-version }}
          if-no-files-found: warn
          path: |
            docs/report.pdf
            docs/figures/*.png
            docs/figures/*.svg
            docs/DATA_DICTIONARY_profile.csv
            data/marts/*.csv
            data/marts/*.parquet
